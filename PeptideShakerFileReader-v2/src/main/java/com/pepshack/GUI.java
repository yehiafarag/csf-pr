package com.pepshack;

import com.compomics.util.examples.BareBonesBrowserLaunch;
import com.csf.handler.Handler;
import com.pepshack.util.ProgressDialogParent;
import com.pepshack.util.beans.ExperimentBean;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.sql.SQLException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.SwingWorker;

/**
 *
 * @author Yehia Farag
 */
public class GUI extends javax.swing.JFrame implements ProgressDialogParent {

    private ExperimentBean exp;
    /* Creates new form GUI */

    public GUI() {
        initComponents();
        jLabel13.setText("");
        jLabel13.setFont(new Font("Serif", Font.BOLD, 12));
        jLabel13.setForeground(Color.RED);
        jTextField1.setText("root");
        jPasswordField1.setText("qwe1212qwe1212");

        jTextField13.setText("localhost");
        jTextField13.setToolTipText("database url");

        jTextField3.setText("");
        jTextField4.setText("");
        jTextField2.setText("");
        jTextField2.setToolTipText("Experiment Name");
        jTextArea1.setText("");
        jTextArea1.setToolTipText("Description");
        jTextField8.setText("");
        jTextField8.setToolTipText("Frag Mode");

        jButton4.setText("");
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/1.jpg"))); // NOI18N
        jButton4.setToolTipText("Proteomics Unit at the University of Bergen");
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);

        jButton5.setText("");
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/2.jpg"))); // NOI18N
        jButton5.setToolTipText("The University of Bergen");
        jButton5.setBorder(null);
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);

        jButton6.setText("");
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/3.jpg"))); // NOI18N
        jButton6.setToolTipText("The Kristian Gerhard Jebsen Foundation");
        jButton6.setBorder(null);
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);

        jTextField5.setText("");
        jTextField5.setToolTipText("Species");

        jTextField11.setText("");
        jTextField11.setToolTipText("Instrument Type");


        jTextField9.setText("");
        jTextField9.setToolTipText("Sample Type");


        jTextField10.setText("");
        jTextField10.setToolTipText("Sample Processing");

        setResizable(false);
        jTextField12.setText("admin@csf.no");
        jTextField12.setToolTipText("Email");
        jTextField12.setEditable(false);


        jTextField6.setText("");
        jTextField6.setToolTipText("Publication Link");


//        jTextField7.setText("Admin");
//        jTextField7.setToolTipText("Uploaded By");


        jButton1.setText("Selecet CPS File");
        jButton2.setText("Process");
        jButton3.setText("Selecet Glycopeptide File");
        jButton7.setText("Select Application Folder");
        jTextField14.setText("");
        this.setTitle("CSF-PR File Reader");
    }
    /* This method is called from within the constructor to
     * Initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * Always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jTextField14 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Database Username:");

        jLabel2.setText("Database Password:");

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField3.setText("jTextField3");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField4.setText("jTextField4");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Experiment Name:");

        jLabel4.setText("Species:");

        jLabel5.setText("Sample Type:");

        jLabel6.setText("Sample Processing:");

        jLabel7.setText("Frag Mode:");

        jLabel8.setText("Process  Fractions:");

        jLabel9.setText("Email:");

        jLabel10.setText("Instrument Type:");

        jLabel11.setText("Publication Link:");

        jLabel12.setText("Description:");

        jTextField2.setText("jTextField2");

        jTextField5.setText("jTextField5");

        jTextField6.setText("jTextField6");

        jTextField8.setText("jTextField8");
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jTextField9.setText("jTextField9");
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jTextField10.setText("jTextField10");

        jTextField11.setText("jTextField11");

        jTextField12.setText("jTextField12");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton6.setText("jButton6");
        jButton6.setAlignmentY(0.0F);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setText("jButton5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(0, 0, 0)
                .addComponent(jButton5)
                .addGap(0, 0, 0)
                .addComponent(jButton6)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton4))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        jLabel13.setText("jLabel13");

        jLabel14.setText("URL:");

        jTextField13.setText("jTextField13");

        jTextField14.setText("jTextField14");

        jButton7.setText("jButton7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(216, 216, 216))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jTextField11)
                    .addComponent(jTextField5)
                    .addComponent(jTextField8)
                    .addComponent(jTextField2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField12, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(jTextField9, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(jTextField10, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jCheckBox1))
                .addGap(22, 22, 22))
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField12)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jCheckBox1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        JFileChooser chooser = new JFileChooser();

        FileFilter filter = new FileFilter() {
            @Override
            public boolean accept(File myFile) {
                return myFile.getName().toLowerCase().endsWith("cps")
                        || myFile.isDirectory();
            }

            @Override
            public String getDescription() {
                return "Supported formats: Peptide-Shaker(.cps)";
            }
        };

        chooser.addChoosableFileFilter(filter);
        int option = chooser.showOpenDialog(this); // parentComponent must a component like JFrame, JDialog...
        if (option == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            jTextField3.setText(path);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private Handler exphandeler;
    private  File resourcefolder;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean test = this.valiField();
        if (test) {
            try {
                new Thread() {
                    @Override
                    public void run() {
                        jProgressBar1.setIndeterminate(true);
                        jProgressBar1.setVisible(true);
                        jLabel13.setText("Start Data Processing");
                    }
                }.start();
                new Thread("DisplayThread") {
                    @Override
                    public void run() {
                        exp = initExperiment();
                        jButton2.setEnabled(false);
                        jProgressBar1.setMaximum(100);

                        final File cpsFile = new File(jTextField3.getText());
                        String res = jTextField14.getText();
                        resourcefolder = new File(res, "resources");
                        if (resourcefolder.exists()) {
                            for (File f : resourcefolder.listFiles()) {
                                if (f.getName().equalsIgnoreCase("matches")) {
                                    for (File f2 : f.listFiles()) {
                                        f2.delete();
                                    }
                                }
                            }

                        } else {
                            System.out.println("res file is not exist");
                        }
                        PSFileImporter fileImporter = new PSFileImporter(jProgressBar1);
                        RunWorker t = new RunWorker(fileImporter, cpsFile, res);
                        t.execute();
                        while (!t.isDone()) {
                            try {
                                Thread.sleep(50);
                            } catch (Exception e) {
                                //e.printStackTrace();
                            }
                        }
                        cleanFields();
                        jButton2.setEnabled(true);
                        jProgressBar1.setValue(0);
                        jProgressBar1.setVisible(false);
                    }
                }.start();


            } catch (Exception e) {
                //   e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileFilter ff = new FileFilter() {
            @Override
            public boolean accept(final File pathname) {
                return pathname.getName().endsWith(".txt");
            }

            @Override
            public String getDescription() {
                return "*.txt";
            }
        };

        chooser.addChoosableFileFilter(ff);
        int option = chooser.showOpenDialog(this); // parentComponent must a component like JFrame, JDialog...
        if (option == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            jTextField4.setText(path);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://probe.uib.no");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://www.uib.no/");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        BareBonesBrowserLaunch.openURL("http://www.stiftkgj.no/");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int option = chooser.showOpenDialog(this); // parentComponent must a component like JFrame, JDialog...
        if (option == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            jTextField14.setText(path);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                GUI gui = new GUI();
                gui.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    @Override
    public void cancelProgress() {
        System.exit(0);
    }

    private ExperimentBean initExperiment() {


        ExperimentBean newExp = new ExperimentBean();
        newExp.setExpType(1);
        String expName = jTextField2.getText();
        String expSpecies = jTextField5.getText();
        String expSampleType = jTextField9.getText();
        String expSampleProcessing = jTextField10.getText();
        String expInstrumentType = jTextField11.getText();
        String expFragMode = jTextField8.getText();
        String expUploadedByName = "Admin";//jTextField7.getText();
        String expEmail = jTextField12.getText();
        String expPublicationLink = jTextField6.getText();
        String expDescription = jTextArea1.getText();

        newExp.setName(expName);
        newExp.setSpecies(expSpecies);
        newExp.setSampleType(expSampleType);
        newExp.setSampleProcessing(expSampleProcessing);
        newExp.setInstrumentType(expInstrumentType);
        newExp.setFragMode(expFragMode);
        newExp.setUploadedByName(expUploadedByName);
        newExp.setEmail(expEmail);
        newExp.setPublicationLink(expPublicationLink);
        newExp.setExpId(-1);
        newExp.setDescription(expDescription);

        return newExp;
    }

    private void cleanFields() {
        jTextField1.setForeground(Color.black);
        jTextField13.setForeground(Color.black);
        jPasswordField1.setForeground(Color.black);
        jTextField2.setForeground(Color.black);
        jTextField2.setText("");
        jTextField3.setForeground(Color.black);
        jTextField3.setText("");
        jTextField4.setText("");
        jTextArea1.setForeground(Color.black);
        jTextArea1.setText("");
        jTextField5.setForeground(Color.black);
        jTextField5.setText("");
        jTextField6.setText("");
//        jTextField7.setForeground(Color.black);
        jTextField8.setForeground(Color.black);
        jTextField8.setText("");
        jTextField11.setForeground(Color.black);
        jTextField11.setText("");
        jTextField9.setForeground(Color.black);
        jTextField9.setText("");
        jTextField10.setForeground(Color.black);
        jTextField10.setText("");
        jTextField12.setForeground(Color.black);
        jTextField14.setText("");
        jTextField14.setForeground(Color.black);

    }

    private boolean valiField() {
        boolean valid = true;
        String errorMessage = "This Field Can Not Be Empty";
        String errorName = "Not Valid Name Please choose Another Name";
        jTextField1.setForeground(Color.black);
        jPasswordField1.setForeground(Color.black);
        jTextField2.setForeground(Color.black);
        jTextField3.setForeground(Color.black);
        jTextArea1.setForeground(Color.black);
        jTextField5.setForeground(Color.black);
//        jTextField7.setForeground(Color.black);
        jTextField8.setForeground(Color.black);
        jTextField11.setForeground(Color.black);
        jTextField9.setForeground(Color.black);
        jTextField10.setForeground(Color.black);
        jTextField12.setForeground(Color.black);
        jTextField13.setForeground(Color.black);
        jTextField14.setForeground(Color.black);
        if (jTextField1.getText() == null || jTextField1.getText().equals("") || jTextField1.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextField1.setForeground(Color.red);
            jTextField1.setText(errorMessage);
        } else if (jTextField2.getText() == null || jTextField2.getText().equals("") || jTextField2.getText().equalsIgnoreCase(errorMessage) || jTextField2.getText().equalsIgnoreCase(errorName)) {
            valid = false;
            jTextField2.setForeground(Color.red);
            if (jTextField2.getText().equalsIgnoreCase(errorName)) {
                jTextField2.setText(errorName);
            } else {
                jTextField2.setText(errorMessage);
            }
        } else if (jTextArea1.getText() == null || jTextArea1.getText().equals("") || jTextArea1.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextArea1.setForeground(Color.red);
            jTextArea1.setText(errorMessage);
        } else if (jTextField8.getText() == null || jTextField8.getText().equals("") || jTextField8.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextField8.setForeground(Color.red);
            jTextField8.setText(errorMessage);
        } else if (jTextField13.getText() == null || jTextField13.getText().equals("") || jTextField13.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextField13.setForeground(Color.red);
            jTextField13.setText(errorMessage);

        } else if (jTextField5.getText() == null || jTextField5.getText().equals("") || jTextField5.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextField5.setForeground(Color.red);
            jTextField5.setText(errorMessage);
        } else if (jTextField11.getText() == null || jTextField11.getText().equals("") || jTextField11.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextField11.setForeground(Color.red);
            jTextField11.setText(errorMessage);
        } else if (jTextField9.getText() == null || jTextField9.getText().equals("") || jTextField9.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextField9.setForeground(Color.red);
            jTextField9.setText(errorMessage);
        } else if (jTextField10.getText() == null || jTextField10.getText().equals("") || jTextField10.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextField10.setForeground(Color.red);
            jTextField10.setText(errorMessage);
        } else if (jTextField12.getText() == null || jTextField12.getText().equals("") || jTextField12.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextField12.setForeground(Color.red);
            jTextField12.setText(errorMessage);
//        } else if (jTextField7.getText() == null || jTextField7.getText().equals("") || jTextField7.getText().equalsIgnoreCase(errorMessage)) {
//            valid = false;
//            jTextField7.setForeground(Color.red);
//            jTextField7.setText(errorMessage);
        } else if (jTextField3.getText() == null || jTextField3.getText().equals("") || jTextField3.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;
            jTextField3.setForeground(Color.red);
            jTextField3.setText(errorMessage);
        } else if (jTextField14.getText() == null || jTextField14.getText().equals("") || jTextField14.getText().equalsIgnoreCase(errorMessage)) {
            valid = false;

            jTextField14.setForeground(Color.red);
            jTextField14.setText(errorMessage);
        } else {
            valid = true;
            File localResourcefolder = new File(jTextField14.getText(), "resources");
            if (localResourcefolder.exists()) {
                for (File f : localResourcefolder.listFiles()) {
                    if (f.getName().equalsIgnoreCase("matches")) {
                        for (File f2 : f.listFiles()) {
                            f2.delete();
                        }
                    }
                }

            } else {
                valid = false;
                jTextField14.setForeground(Color.red);
                jTextField14.setText(errorMessage);
            }
        }
        if (valid) {
            try {
                exphandeler = new Handler("jdbc:mysql://" + jTextField13.getText() + ":3306/", "csf_db_v2", "com.mysql.jdbc.Driver", jTextField1.getText(), jPasswordField1.getText());
            } catch (SQLException sqlE) {
                valid = false;
                jTextField13.setText("Please check Database Params");
                jTextField13.setForeground(Color.red);
                return valid;
            }try{
            boolean checkName = exphandeler.checkName(jTextField2.getText());
            if (!checkName) {
                System.out.println("database conn is faild");
                valid = false;
                jTextField2.setForeground(Color.red);
                jTextField2.setText(errorName);
            }
            }catch(SQLException sqlExp){
                jPasswordField1.setForeground(Color.red);
                 valid = false;            
            }
        }


        return valid;
    }

    class RunWorker extends SwingWorker<Boolean, Boolean> {

        private final PSFileImporter fileImporter;
        private final File cpsFile;
        private final String resFold;

        public RunWorker(PSFileImporter fileImporter, File cpsFile, String resFold) {
            this.fileImporter = fileImporter;
            this.cpsFile = cpsFile;
            this.resFold = resFold;
        }

        @Override
        protected Boolean doInBackground() throws Exception {
            jLabel13.setText("Importing Data....");
            fileImporter.importPeptideShakerFile(cpsFile, resFold);
            DataHandler dataHandler = new DataHandler();
            exp = dataHandler.handelData(fileImporter, exp, jLabel13,jCheckBox1.isSelected());
            if (jTextField4.getText() != null && !jTextField4.getText().equalsIgnoreCase("")) {
                jLabel13.setText("Adding Glycopeptides Data....");
                File glycopeptide = new File(jTextField4.getText());
                exp = dataHandler.addGlicoPep(glycopeptide, exp);
            }
            jLabel13.setText("Start Storing Data....");
            boolean test = exphandeler.handelExp(exp);
            if (test) {
                jLabel13.setText("Done!");
                        if (resourcefolder.exists()) {
                            for (File f : resourcefolder.listFiles()) {
                                if (f.getName().equalsIgnoreCase("matches")) {
                                    for (File f2 : f.listFiles()) {
                                        f2.delete();
                                    }
                                }
                            }

                        }
                        Thread.sleep(10000);
                        System.gc();
                        System.exit(0);
            } else {
                jLabel13.setText("Failed :(");
                 if (resourcefolder.exists()) {
                            for (File f : resourcefolder.listFiles()) {
                                if (f.getName().equalsIgnoreCase("matches")) {
                                    for (File f2 : f.listFiles()) {
                                        f2.delete();
                                    }
                                }
                            }

                        }
            }
            System.gc();
            return test;
        }
    }
}